# Use a specific version of golang for the builder stage
FROM golang:1.21.5-alpine AS builder
WORKDIR /usr/src/app

# Copy the local package files to the container's workspace
COPY . .

# Download dependencies
RUN go mod download

# Build the binary with full static linkage
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /app/main ./

# Use a minimal alpine base image for the final stage
FROM alpine:latest
RUN apk --no-cache add ca-certificates tzdata

# Set the working directory in the container
WORKDIR /app

# Copy the binary from the builder stage to the production image
COPY --from=builder /app/main ./
# Copy the environment file if needed, adjust path as necessary
COPY ./.env ./.env

# Expose port 80 on the container
EXPOSE 80

# Run the binary
CMD ["./main"]
