version: '3.9'

services:
  backend:
    container_name: backend
    build: 
      context: ./
      dockerfile: Dockerfile.prod
    env_file:
      - /home/ubuntu/backend/.env
    ports: 
      - "80:80"
    volumes:
      - ./:/usr/src/app
    depends_on:
      pg_db:
        condition: service_healthy
    networks:
      - mrr

  pg_db:
    container_name: pg_container
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - pg-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - mrr

  pg_admin:
    container_name: pg_admin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    depends_on:
      - pg_db
    logging:
      driver: none
    networks:
      - mrr

  pg_migration:
    container_name: pg_migration
    build:
      context: ./
      dockerfile: Dockerfile.migration
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    depends_on:
      - pg_db
    networks:
      - mrr

volumes:
  pg-db:

networks:
  mrr: {}
