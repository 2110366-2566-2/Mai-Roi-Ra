version: '3.9'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - frontend/.env.local
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
    command: pnpm start
    depends_on:
      pg_db:
        condition: service_healthy
    networks:
      - mai-roi-ra_default

  backend:
    container_name: backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - backend/.env
    ports: 
      - "8080:80"
    volumes:
      - ./backend:/usr/src/app
    command: air main.go -b 0.0.0.0
    expose:
      - "80"
    depends_on:
      pg_db:
        condition: service_healthy
    networks:
      - mai-roi-ra_default

  pg_db:
    container_name: pg_container
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=test_db
    ports:
      - "5432:5432"
    volumes:
      - pg-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 10s
      timeout: 5s
      retries: 3

  pg_admin:
    container_name: pg_admin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    depends_on:
      - pg_db
    logging:
      driver: none

  pg_migration:
    container_name: pg_migration
    build:
      context: ./backend
      dockerfile: Dockerfile.migration
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=test_db
    depends_on:
      - pg_db

volumes:
  pg-db:
